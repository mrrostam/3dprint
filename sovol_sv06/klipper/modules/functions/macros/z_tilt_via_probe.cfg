[gcode_macro _GET_PROBE_LEFT]
variable_z:0
gcode:  
    SET_GCODE_VARIABLE MACRO=_GET_PROBE_LEFT VARIABLE=z VALUE={ printer.probe.last_z_result }  

[gcode_macro _SHOW_PROBE_RESULT]
variable_accuracy:0  ;set to "1" → better than 0.12mm difference, "0" → better than 0.06mm difference between the two sides (will need more itterations)
variable_bed_temp:65 ;change default bed temperature here. Preheat bed to any temperature before running the macro to override this
variable_z1:0
variable_z2:0
variable_diff:0
gcode:
    {% set z1 = printer['gcode_macro _GET_PROBE_LEFT'].z %}
    {% set z2 = printer.probe.last_z_result %}
    {% set diff  = ((z1 - z2)*30)|int %}
    #M118 P0 S"Left Z value: {z1}"
    #M118 P0 S"Right Z value: {z2}"
    #M118 P0 S"Difference: {diff}"
    G1 Z3 F3000

    {% set xmin = (0 if (printer.configfile.config.stepper_x.position_min is not defined) else printer.configfile.config.stepper_x.position_min)|float %}  
    {% set xmax = (300 if (printer.configfile.config.stepper_x.position_max is not defined) else printer.configfile.config.stepper_x.position_max)|float %}  
    {% set ymin = (0 if (printer.configfile.config.stepper_y.position_min is not defined) else printer.configfile.config.stepper_y.position_min)|float %}  
    {% set ymax = (300 if (printer.configfile.config.stepper_y.position_max is not defined) else printer.configfile.config.stepper_y.position_max)|float %}  
    {% set ym=(ymin+ymax)/2 + 18.5 %}
    {% set xm=(xmin+xmax)/2 -25 %}

    {% if diff<accuracy*-1 %}    
      M84 Z
      # SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0          
      RESPOND TYPE=error MSG="Turn right knob CW: { diff*-1 } minutes"      
    {% elif diff>accuracy %}
      M84 Z
      # SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
      RESPOND TYPE=error MSG="Turn right knob CCW: { diff } minutes"        
    {% else %}    
      M140 S0  
      RESPOND TYPE=error MSG="Your gantry is level ({(z1*100.0)|int/100.0}↔{(z2*100.0)|int/100.0})"          
      G1 Z3 F3000
      G1 X{xm} Y{ym} F10000
    {% endif %}
    
[gcode_macro Z_TILT_VIA_PROBE]
gcode:
    {% set bed_temp= printer['gcode_macro _SHOW_PROBE_RESULT'].bed_temp if printer.heater_bed.target<10 else printer.heater_bed.target|int %}

    {% if (printer.heater_bed.temperature<bed_temp-1) or (printer.heater_bed.temperature>bed_temp+4) %}       
    	RESPOND MSG="Preparing for z-probing: heating bed to {bed_temp}"        
        M140 S{bed_temp +3 }
       	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp-1} MAXIMUM={bed_temp+4}
        M140 S{bed_temp }
    {% endif %}
  
    {% if printer.toolhead.homed_axes|lower == "xy" %}
        G28 Z
    {% elif printer.toolhead.homed_axes|lower != "xyz" %}  
        G28
    {% endif %}

    {% set xmin = (0 if (printer.configfile.config.stepper_x.position_min is not defined) else printer.configfile.config.stepper_x.position_min)|float %}  
    {% set xmax = (300 if (printer.configfile.config.stepper_x.position_max is not defined) else printer.configfile.config.stepper_x.position_max)|float %}  
    {% set ymin = (0 if (printer.configfile.config.stepper_y.position_min is not defined) else printer.configfile.config.stepper_y.position_min)|float %}  
    {% set ymax = (300 if (printer.configfile.config.stepper_y.position_max is not defined) else printer.configfile.config.stepper_y.position_max)|float %}  

    {% set ym=(ymin+ymax)/2 + 18.5 %}
    {% set xx=xmax -47 %}
  
    G90     
    G1 Z3 F3000
    G1 X{xmin} Y{ym} F10000
    PROBE SAMPLES=2
    _GET_PROBE_LEFT
    G1 Z3 F3000
    G1 X{xx} Y{ym} F10000
    PROBE SAMPLES=2
    _SHOW_PROBE_RESULT

###########################################  END OF Z-TILT VIA PROBE ####################################